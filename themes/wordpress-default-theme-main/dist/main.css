@import url("https://fonts.googleapis.com/css2?family=Poppins:wght@200;300;400;500;600&family=Quicksand:wght@500;700&display=swap");a,abbr,acronym,address,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font-size:16px;vertical-align:baseline}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1.15}table{border-collapse:collapse;border-spacing:0}ol{list-style:decimal}ul{list-style:square}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:"";content:none}*{margin:0;padding:0;box-sizing:border-box}html{scroll-behavior:smooth}.rtl{direction:rtl}.stop-scrolling{overflow:hidden}body{font-family:Poppins,sans-serif;display:flex;flex-direction:column;justify-content:space-between;min-height:100vh}main{flex:1}.container{display:block;max-width:1470px;width:100%;padding:0 15px;margin:0 auto}.wrapper{display:flex;flex-direction:column}.wrapper_row{flex-flow:row wrap}.title{font-size:1.875rem;line-height:1.33333;letter-spacing:.2px;color:#373f41;text-transform:uppercase;text-align:center;padding-bottom:10px}.decor{position:relative}.decor:after{content:"";display:block;max-width:129px;width:100%;height:3px;background:#333;position:absolute;bottom:0;left:50%;transform:translateX(-50%)}.btn{display:block;font-family:Quicksand,sans-serif;font-size:1rem;line-height:1;letter-spacing:normal;color:#fff;text-decoration:none;padding:13px 31px;border:none;outline:none;background:#d3222a;border-radius:8px;box-shadow:0 6px 30px rgba(0,0,0,.15);cursor:pointer}.cover-bg{display:none;background:rgba(0,0,0,.5);position:fixed;top:0;left:0;right:0;bottom:0;z-index:999;cursor:pointer}.cover-bg.active{display:block}.close-btn{position:absolute;z-index:999;top:15px;right:15px;width:15px;height:15px;cursor:pointer}.close-btn:after,.close-btn:before{content:"";position:absolute;top:50%;left:0;display:block;width:100%;height:1px;background:#fff}.close-btn:before{transform:rotate(45deg)}.close-btn:after{transform:rotate(-45deg)}@media only screen and (min-width:768px){.wrapper{flex-flow:row nowrap}.wrapper_row{display:flex;flex-direction:row;flex-wrap:wrap;justify-content:center;align-items:""}.title{font-size:2.5rem;line-height:normal;letter-spacing:normal;font-weight:600}}@media only screen and (min-width:992px){.title{font-size:3.4375rem;line-height:1.45455}.btn,.title{letter-spacing:normal}.btn{font-size:1.125rem;line-height:1}.close-btn{top:30px;right:30px;width:32px;height:32px;transition:transform .3s}.close-btn:hover{transform:rotate(180deg)}}.intro{margin-bottom:69px}.intro__bg{display:none}.intro__img-box{flex:1;margin:0 -15px}.intro__img{display:block;width:100%}.intro__text-box{flex:1;position:relative;display:flex;flex-direction:column;flex-wrap:wrap;justify-content:"";align-items:center;text-align:center;background:linear-gradient(90deg,#f5f8f9 74%,rgba(245,248,249,0));margin:0 -15px;padding:15px;padding-bottom:34px}.intro__title{font-size:1.5rem;font-weight:700;padding-bottom:10px}.intro__text,.intro__title{line-height:normal;letter-spacing:normal}.intro__text{font-size:.6875rem;font-weight:300;padding-bottom:21px}.features{padding-bottom:49px}.features__title{margin-bottom:18px}.features__item{flex:0 0 calc(50% - 10px);padding:20px;margin:5px;background:#f0f0f0;transition:background .5s,transform .5s}.features__item:hover{background:#d3222a;transform:scale(1.05)}.features__item:hover .features__img-box svg path{fill:#fff}.features__item:hover .features__text-box{color:#fff}.features__img-box{display:block;max-width:45px;height:40px;margin:0 auto;margin-bottom:9px}.features__img-box svg{display:block;width:100%;height:100%;margin:0 auto}.features__img-box svg path{fill:#d3222a}.features__text-box{font-size:.625rem;line-height:1.4;letter-spacing:normal;color:#5a5a5a;text-align:center;-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color .5s}.features__text{font-family:inherit;font-size:inherit;font-weight:inherit;font-style:inherit;line-height:inherit;letter-spacing:inherit;color:inherit}.brands{padding:25px 0;background:rgba(51,51,51,.1)}.brands__wrapper{display:flex;flex-direction:row;flex-wrap:wrap;justify-content:space-around;align-items:center}.brands__title{margin-bottom:21px}.brands__item{max-width:130px;padding-bottom:25px}.brands__item:last-child{padding-bottom:0}.brands__img{display:block;max-width:100%}.header{box-shadow:0 5px 25px 5px rgba(66,66,66,.1)}.header .wrapper{display:flex;flex-direction:row;flex-wrap:wrap;justify-content:space-between;align-items:center}.header__promotion-box{background:#242424;padding:10px 0}.header__promotion-text{font-size:.5rem;line-height:2;letter-spacing:2px;text-align:center;color:#fff;text-transform:uppercase}.header__main{padding:15px 0}.header__col{width:25%;justify-content:flex-start}.header__col,.header__col_end{display:flex;flex-direction:row;flex-wrap:wrap;align-items:flex-start}.header__col_end{justify-content:flex-end}.header__burger{display:block;width:22px;height:14px;position:relative}.header__burger-line{display:block;width:100%;height:2px;border-radius:4px;background:#000;position:absolute;top:0;left:0;transform:translateY(-50%)}.header__burger-line_middle{width:80%;top:50%}.header__burger-line_last{width:70%;top:100%}.header__logo-box{width:92px}.header__logo-img{display:block;width:100%}.header__nav{display:none}.header__cart,.header__search{display:block;width:20px;cursor:pointer}.header__cart{margin-left:20px}.header__btn-box{display:none}.header__btn{cursor:pointer;outline:none}.header__logged-box{display:none}.header-menu{display:block;position:fixed;z-index:999;top:87px;left:0;transform:translateX(-100%);max-width:223px;width:100%;background:#fff;padding:16px 20px 35px;box-shadow:0 8px 6px rgba(0,0,0,.04),0 20px 31px -3px rgba(0,0,0,.1);transition:transform .5s ease}.header-menu.active{transform:translateX(0)}.header-menu .header__logged-box{display:flex;flex-direction:row;flex-wrap:nowrap;justify-content:flex-end;align-items:center;text-decoration:none;padding-top:50px;border-top:1px solid #eaeaea}.header-menu .header__logged-img-box{padding-right:18px}.header-menu .header__logged-name{font-size:1.125rem;line-height:1.22222;letter-spacing:.3px;color:#737b7d}.header-menu .header__btn-box{display:block;padding-top:50px;border-top:1px solid #eaeaea}.header-menu .header__btn{display:block;border:none;background:transparent;font-size:1.125rem;line-height:1.22222;letter-spacing:normal;color:#737b7d;margin:0;margin-bottom:22px}.header-menu .header__btn:last-child{margin-bottom:0}.header-menu__list{list-style:none;padding:0;font-size:1.125rem;line-height:1.22222;letter-spacing:.3px;color:#737b7d}.header-menu__list a,.header-menu__list li{font-family:inherit;font-size:inherit;font-weight:inherit;font-style:inherit;line-height:inherit;letter-spacing:inherit;color:inherit}.header-menu__list li{padding-bottom:24px}.header-menu__list a{text-decoration:none}.rtl .header__burger-line,[dir=rtl] .header__burger-line{right:0}.rtl .header__cart,[dir=rtl] .header__cart{margin-left:0;margin-right:20px}.rtl .header__logged-img-box,[dir=rtl] .header__logged-img-box{padding-right:0;padding-left:18px}.rtl .header-menu,[dir=rtl] .header-menu{right:0;transform:translateX(100%)}.rtl .header-menu.active,[dir=rtl] .header-menu.active{transform:translateX(0)}.footer{background:#171717}.footer__wrapper{padding:50px 0}.footer__col{text-align:center;padding-bottom:30px}.footer__col:first-child,.footer__col:last-child{padding-bottom:0}.footer__logo-box{display:block;width:127px;margin:0 auto;margin-bottom:50px}.footer__menu-title{font-weight:600;font-size:1.125rem;line-height:1.33333;letter-spacing:.1px;color:#fff;padding-bottom:10px}.footer-menu__list{display:block;list-style:none;font-size:.875rem;line-height:normal;letter-spacing:normal;font-weight:300;color:#fff;text-decoration:none}.footer-menu__list li{margin-bottom:10px}.footer-menu__list a,.footer-menu__list li{font-family:inherit;font-size:inherit;font-weight:inherit;font-style:inherit;line-height:inherit;letter-spacing:inherit;color:inherit;text-decoration:inherit}.footer__soc-box{display:flex;flex-direction:row;flex-wrap:nowrap;justify-content:center;align-items:center}.footer__soc-link{display:block;width:29px;height:29px;margin-right:20px}.footer__soc-link:last-child{margin-right:0}.footer__dev-box{padding:15px 0;background:#000}.footer__dev-text{font-size:.625rem;line-height:normal;letter-spacing:normal;font-weight:300;color:#fff;text-align:center}.rtl .footer__soc-link,[dir=rtl] .footer__soc-link{margin-right:0;margin-left:20px}.rtl .footer__soc-link:last-child,[dir=rtl] .footer__soc-link:last-child{margin-right:0;margin-left:0}.page-404{padding:80px 0 53px}.page-404__wrapper{display:flex;flex-direction:column;flex-wrap:wrap;justify-content:"";align-items:center}.page-404__img-box{max-width:1100px;width:100%}.page-404__img{display:block;max-width:100%}.page-404__text-box{color:#373f41;text-align:center}.page-404__title{font-size:1.5rem;line-height:""/24;letter-spacing:.2px;font-weight:600;text-transform:uppercase;padding-bottom:7px}.page-404__text{font-size:.8125rem;line-height:normal;letter-spacing:normal;font-weight:300;padding-bottom:38px}.page-404__btn{display:inline-block}.about{padding-top:30px}.about__item{display:flex;flex-direction:column;flex-wrap:wrap;justify-content:"";align-items:"";padding-bottom:40px}.about__item:first-child .about__title{font-size:2.25rem;line-height:1.97222;letter-spacing:normal}.about__img-box{order:2}.about__img-box img{display:block;max-width:100%}.about__text-box{order:1;padding-bottom:20px}.about__text{font-size:.875rem;line-height:1.71429;letter-spacing:normal;font-weight:300;color:#646464}.about__text p{font-family:inherit;font-size:inherit;font-weight:inherit;font-style:inherit;line-height:inherit;letter-spacing:inherit;color:inherit;padding-bottom:16px}.about__text p:last-child{padding-bottom:0}.about__title{font-weight:600;font-size:1.5rem;line-height:1.375;letter-spacing:.2px;color:#373f41;padding-bottom:10px}.contact-us{padding:28px 0 39px}.contact-us__title{font-size:2.25rem;line-height:1.97222;letter-spacing:.2px;font-weight:600;text-align:center;color:#373f41}.contact-us__img-box{display:none}.contact-form__item{padding-bottom:30px}.contact-form__item:last-child{padding-bottom:0}.contact-form__label{display:block;font-size:.875rem;line-height:1;letter-spacing:normal;font-weight:200;color:#000;opacity:.6;padding-bottom:15px}.contact-form__input{display:block;width:100%;border:none;outline:none;border-bottom:1px solid #d2d2d2;background:transparent;padding:0 20px 15px;font-family:inherit;font-weight:300;font-size:1.125rem;line-height:1;letter-spacing:1px}.contact-form__input_textarea{resize:vertical;min-height:40px;max-height:100px}.contact-form__input::placeholder{font-family:inherit;font-size:inherit;font-weight:inherit;font-style:inherit;line-height:inherit;letter-spacing:inherit;color:inherit;opacity:.5}.contact-form__submit{display:block;margin:0 auto;font-family:Quicksand,sans-serif;font-size:1.125rem;line-height:1;letter-spacing:normal;color:#fff;text-decoration:none;padding:13px 31px;border:none;outline:none;background:#d3222a;border-radius:8px;box-shadow:0 6px 30px rgba(0,0,0,.15);cursor:pointer}.faq{padding-top:16px;padding-bottom:30px}.faq__title{font-weight:600;font-size:1.5rem;line-height:1.5;letter-spacing:.2px;color:#646464;padding-bottom:14px}.faq__item{padding-bottom:17px}.faq__question-box{display:flex;flex-direction:row;flex-wrap:nowrap;justify-content:space-between;align-items:center;border-bottom:1px solid #9d9d9d;padding-bottom:12px;cursor:pointer;-webkit-tap-highlight-color:transparent}.faq__question{font-size:.875rem;line-height:1.57143;letter-spacing:.3px;color:#404040;padding-right:15px}.faq__answer-box{padding-top:0;height:0;opacity:0;overflow:hidden;transform:translateY(-10px);transition:opacity .2s ease,transform .2s ease}.faq__answer-box.active{height:100%;opacity:1;padding-top:10px;transform:translateY(0)}.faq__answer{font-size:.75rem;line-height:1.83333;letter-spacing:.3px;color:#646464}.faq__btn-box{position:relative;flex:0 0 21px;height:21px}.faq__btn-box:after,.faq__btn-box:before{content:"";display:block;width:100%;height:1px;background:#9d9d9d;position:absolute;top:50%;left:0}.faq__btn-box:after{transform:rotate(90deg);transition:transform .2s}.faq__btn-box.active:after{transform:rotate(0)}.faq__img-box{max-width:630px;margin:0 auto}.faq__img{display:block;width:100%}.faq-form__title{font-size:1.5rem;line-height:1.16667;letter-spacing:.2px;font-weight:600;text-align:center;color:#373f41;padding-bottom:15px}.faq-form__subtitle{font-size:1.125rem;line-height:1.22222;letter-spacing:.3px;font-weight:300;text-align:center;color:#404040;padding-bottom:40px}.faq-form__form{background:linear-gradient(318deg,#cdcdcd 19%,#9d9d9d 89%);padding:40px 22px 54px;margin:0 -15px}.faq-form__label{font-size:.75rem}.faq-form__input,.faq-form__label{line-height:1;letter-spacing:normal;color:#fff}.faq-form__input{font-size:.9375rem;border-bottom-color:#fff}.faq-form__submit{display:block;max-width:217px;width:100%;color:#fff;background:transparent;border:1px solid #fff;padding:18px 45px;border-radius:5px}.faq-form__img-box{display:none;max-width:767px}.faq-form__img{display:block;max-width:100%}.rtl .faq__question,[dir=rtl] .faq__question{padding-right:0;padding-left:15px}.login-popup{display:none;position:fixed;top:50%;left:50%;z-index:1000;transform:translate(-50%,-50%);background-position:50%;background-size:cover;background-repeat:no-repeat;max-width:568px;width:calc(100% - 42px);padding:29px 0 0}.login-popup.active{display:block}.login-popup__title{font-weight:600;font-size:1.125rem;line-height:1;letter-spacing:1px;text-transform:uppercase;text-align:center;color:#fff;padding:0 37px 11px}.login-popup__form{display:block;padding:0 37px}.login-popup__item{margin-bottom:12px;position:relative}.login-popup__item:last-child{padding-top:15px;margin-bottom:30px}.login-popup__eye{display:block;width:18px;height:13px;position:absolute;top:calc(50% + 11px);left:10px;transform:translateY(-50%)}.login-popup__label{font-weight:300;font-size:.0625rem;line-height:25;letter-spacing:1px;color:#fff;opacity:.5}.login-popup__input{display:block;width:100%;background:transparent;border:none;border-bottom:1px solid hsla(0,0%,100%,.1);outline:none;font-size:.9375rem;line-height:1;letter-spacing:.9px;color:#fff;padding:10px 18px;transition:border-bottom-color .2s}.login-popup__input:focus,.login-popup__input:hover,.login-popup__input:valid{border-bottom-color:#fff}.login-popup__submit{display:block;width:100%;font-family:Quicksand,sans-serif;font-size:1rem;line-height:1.125;letter-spacing:normal;font-weight:700;color:#fff;padding:9px 18px;background:transparent;border:1px solid #fff;border-radius:5px;outline:none;cursor:pointer}.login-popup__forget-pass{display:block;background:rgba(0,0,0,.2);text-align:center;padding:16px 37px}.login-popup__forget-pass-text{font-size:.75rem;line-height:.16667;letter-spacing:normal;font-weight:300;color:#fff}.login-popup__forget-pass-link{font-family:inherit;font-size:inherit;font-weight:inherit;font-style:inherit;line-height:inherit;letter-spacing:inherit;color:inherit;font-weight:600;text-decoration:none}.rtl .close-btn,[dir=rtl] .close-btn{right:auto;left:15px}.register-popup{display:none;position:fixed;top:50%;left:50%;z-index:1000;transform:translate(-50%,-50%);background-position:50%;background-size:cover;background-repeat:no-repeat;max-width:972px;width:calc(100% - 42px);padding:29px 0 0}.register-popup.active{display:block}.register-popup__title{font-weight:600;font-size:1.125rem;line-height:1;letter-spacing:1px;text-transform:uppercase;text-align:center;color:#fff;padding:0 37px 11px}.register-popup__form{display:flex;flex-direction:row;flex-wrap:wrap;justify-content:center;align-items:"";padding:0 37px}.register-popup__item{flex:1 1 344px;position:relative;padding:0 15px;margin-bottom:12px}.register-popup__item_agreement{align-items:center}.register-popup__item_agreement,.register-popup__item_submit{flex:0 0 100%;display:inline-flex;display:flex;flex-direction:row;flex-wrap:wrap;justify-content:flex-start}.register-popup__item_submit{padding-top:15px;margin-bottom:30px;align-items:flex-start}.register-popup__checkbox-label{font-size:.75rem;line-height:1.66667;letter-spacing:normal;font-weight:300;color:#fff;margin-left:15px}.register-popup__terms-link{font-family:inherit;font-size:inherit;font-weight:inherit;font-style:inherit;line-height:inherit;letter-spacing:inherit;color:inherit;font-weight:600;text-decoration:none}.register-popup__eye{display:block;width:18px;height:13px;position:absolute;top:calc(50% + 11px);right:20px;transform:translateY(-50%)}.register-popup__label{font-weight:300;font-size:.6875rem;line-height:2.27273;letter-spacing:.6px;color:#fff;opacity:.5}.register-popup__input{display:block;width:100%;background:transparent;border:none;border-bottom:1px solid hsla(0,0%,100%,.1);outline:none;font-size:.9375rem;line-height:1;letter-spacing:.9px;color:#fff;padding:10px 18px;transition:border-bottom-color .2s}.register-popup__input:focus,.register-popup__input:hover,.register-popup__input:valid{border-bottom-color:#fff}.register-popup__submit{display:block;max-width:344px;width:100%;font-family:Quicksand,sans-serif;font-size:1rem;line-height:1.125;letter-spacing:normal;font-weight:700;color:#fff;padding:9px 18px;background:transparent;border:1px solid #fff;border-radius:5px;outline:none;cursor:pointer}.register-popup__have-acc{display:block;background:rgba(0,0,0,.2);text-align:center;padding:16px 37px}.register-popup__have-acc-text{font-size:.75rem;line-height:1.66667;letter-spacing:normal;font-weight:300;color:#fff}.register-popup__have-acc-link{font-family:inherit;font-size:inherit;font-weight:inherit;font-style:inherit;line-height:inherit;letter-spacing:inherit;font-weight:600;color:inherit;text-decoration:none}.rtl .register-popup__checkbox-label,[dir=rtl] .register-popup__checkbox-label{margin-left:0;margin-right:15px}.rtl .register-popup__eye,[dir=rtl] .register-popup__eye{right:auto;left:20px}.subscribe-popup{display:none;position:fixed;z-index:999;top:50%;left:50%;transform:translate(-50%,-50%);background-position:50%;background-size:cover;background-repeat:no-repeat;max-width:580px;width:calc(100% - 42px);padding:36px 0 0}.subscribe-popup.active{display:block}.subscribe-popup__title{font-weight:600;font-size:1.125rem;line-height:1;letter-spacing:1px;text-transform:uppercase;text-align:center;color:#fff;padding:0 37px 11px}.subscribe-popup__subtitle{font-size:.6875rem;line-height:2.27273;letter-spacing:normal;font-weight:300;text-align:center;color:#fff;padding:0 37px;padding-bottom:20px}.subscribe-popup__form{padding:0 37px 35px}.subscribe-popup__item{padding-bottom:20px}.subscribe-popup__item:last-child{padding-bottom:0}.subscribe-popup__input{display:block;width:100%;background:transparent;border:none;border-bottom:1px solid hsla(0,0%,100%,.1);outline:none;font-size:.9375rem;line-height:1;letter-spacing:.9px;color:#fff;padding:10px 18px;transition:border-bottom-color .2s}.subscribe-popup__input:focus,.subscribe-popup__input:hover,.subscribe-popup__input:valid{border-bottom-color:#fff}.subscribe-popup__input::placeholder{font-family:inherit;font-size:inherit;font-weight:inherit;font-style:inherit;line-height:inherit;letter-spacing:inherit;color:inherit;opacity:.5}.subscribe-popup__checkbox-label{font-size:.75rem;line-height:1.66667;letter-spacing:normal;font-weight:300;color:#fff;margin-left:15px}.subscribe-popup__terms-link{font-family:inherit;font-size:inherit;font-weight:inherit;font-style:inherit;line-height:inherit;letter-spacing:inherit;color:inherit;font-weight:600;text-decoration:none}.subscribe-popup__submit{display:block;min-width:217px;font-family:Quicksand,sans-serif;font-size:1rem;line-height:1.125;letter-spacing:normal;font-weight:700;color:#fff;padding:9px 18px;background:transparent;border:1px solid #fff;border-radius:5px;outline:none;cursor:pointer}.subscribe-popup__msg-box{display:block;background:rgba(0,0,0,.2);text-align:center;padding:16px 37px}.subscribe-popup__msg{font-size:.75rem;line-height:1.66667;letter-spacing:normal;font-weight:300;color:#fff}.rtl .subscribe-popup__checkbox-label,[dir=rtl] .subscribe-popup__checkbox-label{margin-left:0;margin-right:15px}.rtl .subscribe-popup__eye,[dir=rtl] .subscribe-popup__eye{right:auto;left:20px}.question-popup{display:none;position:fixed;z-index:999;top:50%;left:50%;transform:translate(-50%,-50%);background-position:50%;background-size:cover;background-repeat:no-repeat;max-width:969px;width:calc(100% - 42px);padding:36px 0 0}.question-popup.active{display:block}.question-popup__title{font-size:1.125rem;line-height:""/18;letter-spacing:1px;font-weight:500;color:#fff;padding:0 37px;text-align:center}.question-popup__subtitle{font-size:.6875rem;line-height:2.27273;letter-spacing:normal;font-weight:300;text-align:center;color:#fff;padding:0 37px;padding-bottom:20px}.question-popup__form{padding:0 37px 35px}.question-popup__item{padding-bottom:20px}.question-popup__item:last-child{padding-bottom:0}.question-popup__input{display:block;max-width:280px;width:100%;background:transparent;border:none;border-bottom:1px solid hsla(0,0%,100%,.1);outline:none;font-size:.9375rem;line-height:1;letter-spacing:.9px;color:#fff;padding:10px 18px;transition:border-bottom-color .2s}.question-popup__input:focus,.question-popup__input:hover,.question-popup__input:valid{border-bottom-color:#fff}.question-popup__input::placeholder{font-family:inherit;font-size:inherit;font-weight:inherit;font-style:inherit;line-height:inherit;letter-spacing:inherit;color:inherit;opacity:.5}.question-popup__submit{display:block;max-width:217px;width:100%;font-family:Quicksand,sans-serif;font-size:1rem;line-height:1.125;letter-spacing:normal;font-weight:700;color:#fff;padding:9px 18px;background:transparent;border:1px solid #fff;border-radius:5px;outline:none;cursor:pointer}@media only screen and (min-width:768px){.intro{position:relative}.intro__bg{z-index:-1;position:absolute;top:0;right:0;display:block;width:100%;height:100%;object-fit:cover;transform:scaleX(-1)}.intro__img-box{display:none}.intro__text-box{display:flex;flex-direction:row;flex-wrap:wrap;justify-content:"";align-items:flex-start;max-width:50%;margin-left:auto;padding:0;padding:138px 0 230px;text-align:unset;margin:0;background:unset}.intro__title{font-size:3.4375rem;font-weight:600;padding-bottom:26px}.intro__text,.intro__title{line-height:normal;letter-spacing:normal}.intro__text{font-size:.9375rem;padding-bottom:55px}.rtl .intro__bg,[dir=rtl] .intro__bg{transform:scale(1)}.rtl .intro__text-box,[dir=rtl] .intro__text-box{margin-left:auto}.features{padding-bottom:70px}.features__title{margin-bottom:43px}.features__item{flex:1 1 calc(25% - 15px);max-width:345px;padding:50px 40px;margin:0;margin-top:15px;margin-right:15px}.features__item:nth-child(-n+4){margin-top:0}.features__item:last-child,.features__item:nth-child(4){margin-right:0}.features__img-box{max-width:70px;height:60px;margin-bottom:15px}.features__text-box{font-size:.875rem;line-height:1.28571;letter-spacing:normal}.rtl .features__item,[dir=rtl] .features__item{margin-right:0;margin-left:15px}.rtl .features__item:last-child,.rtl .features__item:nth-child(4),[dir=rtl] .features__item:last-child,[dir=rtl] .features__item:nth-child(4){margin-right:0;margin-left:0}.brands__title{margin-bottom:20px}.footer__wrapper{padding:45px 0 30px}.footer__col{margin-left:30px;padding-bottom:0}.footer__col:first-child{margin-left:0;margin-right:auto}.footer__col:last-child{margin-right:0}.footer__menu-title{text-align:left;padding-bottom:24px}.footer-menu__list{text-align:left}.footer__soc-box{display:flex;flex-direction:row;flex-wrap:wrap;justify-content:flex-start;align-items:flex-start}.footer__dev-box{padding:20px 0}.footer__dev-text{font-size:.875rem;line-height:normal;letter-spacing:normal}.rtl .footer__col,[dir=rtl] .footer__col{margin-left:0;margin-right:30px}.rtl .footer__col:first-child,[dir=rtl] .footer__col:first-child{margin-left:auto;margin-right:0}.rtl .footer-menu__list,.rtl .footer__menu-title,[dir=rtl] .footer-menu__list,[dir=rtl] .footer__menu-title{text-align:right}.rtl .footer__soc-link,[dir=rtl] .footer__soc-link{margin-right:0;margin-left:20px}.rtl .footer__soc-link:last-child,[dir=rtl] .footer__soc-link:last-child{margin-right:0;margin-left:0}.page-404__title{font-size:2.5rem;line-height:1.5;letter-spacing:normal}.page-404__text{font-size:.9375rem;line-height:normal;letter-spacing:normal}.about__item:first-child .about__title{font-size:3.4375rem;line-height:normal;letter-spacing:normal}.about__text{font-size:1.0625rem;line-height:normal;letter-spacing:normal}.about__title{font-size:2.25rem;line-height:1.52778;letter-spacing:normal}.contact-us__item{flex:1}.contact-us__item:first-child{padding-left:40px;margin-right:30px}.contact-us__item:nth-child(2){margin-left:30px}.contact-us__title{width:calc(100% + 40px);margin-left:-40px;font-size:3.4375rem;line-height:normal;letter-spacing:normal;text-align:left;padding-bottom:30px}.contact-us__img-box{display:block;max-width:629px;position:relative}.contact-us__img-box:after{content:"";display:block;width:calc(100% - 83px);height:calc(100% + 10px);position:absolute;top:30px;left:-39px;z-index:-1;background:linear-gradient(152deg,#cdcdcd 12%,#9d9d9d 82%)}.contact-us__img{display:block;max-width:100%}.contact-form{background:linear-gradient(152deg,#aaa 12%,#818181 82%);padding:40px 65px}.contact-form__input,.contact-form__label{color:#fff}.contact-form__submit{margin:0;margin-right:auto;background:transparent;color:#fff;border:1px solid #fff;min-width:200px;padding:16px 32px;border-radius:5px}.rtl .contact-us__item:first-child,[dir=rtl] .contact-us__item:first-child{padding-left:0;padding-right:40px;margin-right:0;margin-left:30px}.rtl .contact-us__item:nth-child(2),[dir=rtl] .contact-us__item:nth-child(2){margin-left:0;margin-right:30px}.rtl .contact-us__title,[dir=rtl] .contact-us__title{text-align:right;margin-right:-40px}.rtl .contact-us__img-box,[dir=rtl] .contact-us__img-box{display:block;max-width:629px;position:relative}.rtl .contact-us__img-box:after,[dir=rtl] .contact-us__img-box:after{right:-39px}.rtl .contact-form__submit,[dir=rtl] .contact-form__submit{margin:0;margin-left:auto}.faq{padding-top:40px;padding-bottom:90px}.faq__box{flex:1;padding-right:50px}.faq__title{font-size:5.5rem;line-height:6rem;padding-bottom:40px}.faq__item{padding-bottom:30px}.faq__question-box{padding-bottom:17px}.faq__question{font-size:1.125rem}.faq__answer,.faq__question{line-height:normal;letter-spacing:normal}.faq__answer{font-size:.875rem}.faq__img-box{flex:1}.faq-form{padding-bottom:160px}.faq-form .wrapper{align-items:center}.faq-form__title{font-size:2.25rem;line-height:1.11111;letter-spacing:normal;padding-bottom:18px}.faq-form__subtitle{font-size:1.25rem;line-height:normal;letter-spacing:normal}.faq-form__form{flex:0 0 50%;margin:0}.faq-form__label{font-size:.875rem}.faq-form__input,.faq-form__label{line-height:1;letter-spacing:normal}.faq-form__input{font-size:1.125rem}.faq-form__submit{display:block;max-width:100%;width:100%}.faq-form__img-box{display:block;flex:0 0 50%;padding-right:72px}.rtl .faq__box,[dir=rtl] .faq__box{padding-right:0;padding-left:50px}.rtl .faq-box__img-box,[dir=rtl] .faq-box__img-box{padding-right:0;padding-left:72px}}@media only screen and (min-width:992px){.intro__title{font-size:4.5rem}.intro__text,.intro__title{line-height:normal;letter-spacing:normal}.intro__text{font-size:1.125rem}.features__img-box{max-width:90px;height:75px;margin-bottom:20px}.features__text-box{font-size:1.125rem;line-height:normal;letter-spacing:normal}.brands{padding:62px 0 70px}.brands__title{margin-bottom:46px}.brands__item{max-width:241px}.brands__img-box{opacity:.1;transition:opacity .3s}.brands__img-box:hover{opacity:1}.header{box-shadow:none}.header .wrapper{display:flex;flex-direction:row;flex-wrap:nowrap;justify-content:flex-start;align-items:""}.header__promotion-text{font-size:.6875rem;line-height:2;letter-spacing:6.3px}.header__main{padding:33px 0}.header__col{width:auto}.header__burger{display:none}.header__logo-box{width:127px}.header__nav{margin-right:auto}.header__cart,.header__nav,.header__search{display:block}.header__cart:hover svg path,.header__search:hover svg path{fill:red}.header__logged-box{display:flex;flex-direction:row;flex-wrap:nowrap;justify-content:flex-end;align-items:center;text-decoration:none;padding-left:50px}.header__logged-img-box{padding-left:18px}.header__logged-name{font-size:1.125rem;line-height:1.22222;letter-spacing:.3px;color:#737b7d}.header__btn-box{display:flex;margin-left:30px}.header__btn{font-size:.875rem;line-height:1.57143;letter-spacing:.3px;border:none;background:transparent}.header__btn-sign-in{color:#737b7d}.header__btn-sign-up{color:#fff;background:#d3222a;border-radius:5px;padding:10px 25px;margin-left:20px}.header-menu{display:block;position:static;background:transparent;box-shadow:unset;padding:10px 10px 10px 0;border-left:1px solid #eaeaea;transform:translateX(0);max-width:100%;flex:1;margin-left:30px}.header-menu .header__btn-box,.header-menu .header__logged-box{display:none}.header-menu__list{display:flex}.header-menu__list li{padding-left:30px;padding-bottom:0;white-space:nowrap}.rtl .header__nav,[dir=rtl] .header__nav{margin-left:auto}.rtl .header__cart,[dir=rtl] .header__cart{margin-left:0}.rtl .header__logged-box,[dir=rtl] .header__logged-box{padding-left:0;padding-right:50px}.rtl .header__logged-img-box,[dir=rtl] .header__logged-img-box{padding-left:0;padding-right:18px}.rtl .header__btn-box,[dir=rtl] .header__btn-box{margin-left:0;margin-right:30px}.rtl .header__btn-sign-up,[dir=rtl] .header__btn-sign-up{margin-left:0;margin-right:20px}.rtl .header-menu,[dir=rtl] .header-menu{padding:10px 0 10px 10px;border-left:none;border-right:1px solid #eaeaea;margin-right:30px;transform:translateX(0)}.rtl .header-menu__list li,[dir=rtl] .header-menu__list li{padding-left:0;padding-right:30px}.rtl .header-menu__list li:first-child,[dir=rtl] .header-menu__list li:first-child{padding-left:0}.footer__col{margin-left:100px}.footer__col:first-child{margin-right:auto}.rtl .footer__col,[dir=rtl] .footer__col{margin-left:0;margin-right:100px}.page-404__img-box{padding-bottom:0}.page-404__text-box{transform:translateY(-70px)}.page-404__title{font-size:3.4375rem;line-height:1.43636;letter-spacing:normal}.page-404__text{font-size:1.125rem;line-height:normal;letter-spacing:normal;padding-bottom:47px}.about{padding-top:66px}.about__item{display:flex;flex-direction:row;flex-wrap:nowrap;justify-content:space-between;align-items:stretch;padding-bottom:130px}.about__item:first-child .about__title{font-size:4.5rem;line-height:normal;letter-spacing:normal}.about__item:nth-child(2n) .about__img-box{order:1}.about__item:nth-child(2n) .about__text-box{order:2;padding-left:30px}.about__item:nth-child(odd) .about__img-box{order:2}.about__item:nth-child(odd) .about__text-box{order:1;padding-right:30px}.about__img-box{flex:1}.about__img-box img{max-height:416px;display:block;width:100%;height:100%;object-fit:cover}.about__text-box{flex:0 0 50%;padding-bottom:0}.about__title{font-size:3.4375rem;line-height:1.09091}.about__text,.about__title{letter-spacing:normal;padding-bottom:30px}.about__text{font-size:1.25rem;line-height:1.3}.rtl .about__item:nth-child(2n) .about__img-box,[dir=rtl] .about__item:nth-child(2n) .about__img-box{order:1}.rtl .about__item:nth-child(2n) .about__text-box,[dir=rtl] .about__item:nth-child(2n) .about__text-box{order:2;padding-right:30px;padding-left:0}.rtl .about__item:nth-child(odd) .about__img-box,[dir=rtl] .about__item:nth-child(odd) .about__img-box{order:2}.rtl .about__item:nth-child(odd) .about__text-box,[dir=rtl] .about__item:nth-child(odd) .about__text-box{order:1;padding-left:30px;padding-right:0}.contact-us{padding:72px 0}.contact-us__item:first-child{margin-right:50px}.contact-us__item:nth-child(2){margin-left:50px}.contact-us__title{font-size:4.5rem;line-height:normal;letter-spacing:normal;padding-bottom:66px}.rtl .contact-us__item:first-child,[dir=rtl] .contact-us__item:first-child{margin-right:0;margin-left:50px}.rtl .contact-us__item:nth-child(2),[dir=rtl] .contact-us__item:nth-child(2){margin-left:0;margin-right:50px}.faq{padding-bottom:160px}.faq__title{font-size:4.5rem;line-height:1;letter-spacing:normal;padding-bottom:76px}.faq__item{padding-bottom:42px}.faq-form__title{font-size:3.4375rem;line-height:normal;letter-spacing:normal;line-height:5.9rem}.faq-form__subtitle{font-size:1.5rem;line-height:1.08333;letter-spacing:normal;padding-bottom:56px}.login-popup__title{font-size:4.5rem;line-height:1;letter-spacing:normal;padding-bottom:42px;text-align:unset}.login-popup__item{margin-bottom:35px}.login-popup__eye{cursor:pointer}.login-popup__label{font-size:.875rem;line-height:normal;letter-spacing:normal}.login-popup__input{font-size:1.125rem;line-height:1;letter-spacing:normal;padding:15px 25px}.login-popup__submit{font-size:1.125rem;line-height:normal;letter-spacing:normal;padding:20px 40px}.rtl .close-btn,[dir=rtl] .close-btn{left:30px;right:auto}.register-popup{padding-top:65px}.register-popup__title{font-size:4.5rem;line-height:1;letter-spacing:normal;padding:0 120px;padding-bottom:42px;text-align:unset}.register-popup__form{padding:0 120px}.register-popup__item{margin-bottom:35px}.register-popup__item_submit{margin-bottom:70px}.register-popup__checkbox-label{font-size:.875rem;line-height:1.42857;letter-spacing:normal}.register-popup__eye{cursor:pointer}.register-popup__label{font-size:.875rem;line-height:normal;letter-spacing:normal}.register-popup__input{font-size:1.125rem;line-height:1;letter-spacing:normal;padding:15px 25px}.register-popup__submit{font-size:1.125rem;line-height:normal;letter-spacing:normal;padding:20px 40px}.subscribe-popup__title{font-size:1.8125rem;line-height:normal;letter-spacing:normal;padding:0 75px 8px}.subscribe-popup__subtitle{font-size:.875rem;line-height:normal;letter-spacing:normal;padding:0 75px 35px}.subscribe-popup__form{padding:0 75px 35px}.question-popup{padding-top:67px}.question-popup__title{font-size:1.8125rem;padding:0 117px 8px}.question-popup__subtitle,.question-popup__title{line-height:normal;letter-spacing:normal;text-align:unset}.question-popup__subtitle{font-size:.875rem;padding:0 117px 35px}.question-popup__form{padding:0 117px 95px}.question-popup__item{padding-bottom:33px}}@media only screen and (min-width:1366px){.contact-us__item:first-child{margin-right:100px}.contact-us__item:nth-child(2){margin-left:100px}.contact-form{padding:80px 130px;max-width:100%;width:100%}.rtl .contact-us__item:first-child,[dir=rtl] .contact-us__item:first-child{margin-left:100px}.rtl .contact-us__item:nth-child(2),[dir=rtl] .contact-us__item:nth-child(2){margin-right:100px}}@media only screen and (min-width:1440px){.header__cart{margin-left:40px}.header__btn-box{margin-left:50px}.header-menu__list li{padding-left:75px}.header-menu__list li:first-child{padding-left:30px}.rtl .header__cart,[dir=rtl] .header__cart{margin-right:40px}.rtl .header__btn-box,[dir=rtl] .header__btn-box{margin-right:50px}.rtl .header-menu__list li,[dir=rtl] .header-menu__list li{padding-right:75px}.rtl .header-menu__list li:first-child,[dir=rtl] .header-menu__list li:first-child{padding-left:0;padding-right:30px}}@media only screen and (min-width:1540px){.contact-us__item:first-child{padding-left:0}.contact-us__title{margin-left:0}.rtl .contact-us__item:first-child,[dir=rtl] .contact-us__item:first-child{padding-right:0}.rtl .contact-us__title,[dir=rtl] .contact-us__title{margin-right:0}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
